@model Personal_Management.Models.Positions

@{
    ViewBag.Title = "Изменение данных должности";
    ViewBag.NameMeta = "UpdPos";
    ViewBag.ContentMeta = "На данном окне возможно изменение данных должности";
}

<h2>Изменение данных</h2>
<hr />
<ol class="breadcrumb mb-3">
    <li class="breadcrumb-item">@Html.ActionLink("Вернуться к списку должностей", "Index")</li>
    <li class="breadcrumb-item">@Html.ActionLink("Отделы", "Index", "Departments")</li>
</ol>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Должность</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID_Positions)

    <div class="form-group">
        @Html.LabelFor(model => model.Naim_Posit, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Naim_Posit, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Naim_Posit, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control", @type="number", @step="0.01", @min="0" } })
            @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Depart_ID, "Отдел организации", htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.DropDownList("Depart_ID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Depart_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Kol_Vo_Pers, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Kol_Vo_Pers, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Kol_Vo_Pers, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Kol_Vo_On_Isp, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Kol_Vo_On_Isp, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Kol_Vo_On_Isp, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Сохранить изменения" class="btn btn-outline-success" />
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
